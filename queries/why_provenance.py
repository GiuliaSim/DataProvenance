# The inputs that influenced $d_{ij}$.

# Input: $d_{ij}$ - single element

import pymongo
import pandas as pd
import pprint
import sys
import time
import random

def get_why_prov(ents_id):
	# Get input entities from ents_id:
	input_entities = entities.find({'identifier':{'$in': ents_id}, 'attributes.instance':'-1'},{'identifier':1,'_id':0}).distinct('identifier')
	
	# Select intermediate entities:
	diff = lambda l1, l2: [x for x in l1 if x not in l2]
	ents_id = diff(ents_id, input_entities)

	# Find the activities that generated the intermediate entities:
	generated_act = relations.find({'prov:entity': {'$in':ents_id}, 'prov:relation_type':'wasGeneratedBy'},{'prov:activity':1,'_id':0}).distinct('prov:activity')

	if not generated_act:
		# Base case: entities is not generated by any activity
		return input_entities
	else:
		# Find the entities used by the activities:
		used_ent = relations.find({'prov:activity':{'$in':generated_act}, 'prov:relation_type':'used'},{'prov:entity':1,'_id':0}).distinct('prov:entity')

		return input_entities + get_why_prov(used_ent)
	
if __name__ == "__main__":

	if len(sys.argv) == 2 :
		dbname = sys.argv[1]

		# Connect with MongoClient on the default host and port:
		client = pymongo.MongoClient('localhost', 27017)

		# Getting a Database:
		db = client[dbname]

		# Get entities and relations mongodb collection:
		entities = db.entities
		relations = db.relations

		# Get invalidated entities id
		invalidated_ents_id = relations.find({'prov:relation_type': 'wasInvalidatedBy'}, {'prov:entity': 1, '_id': 0}).distinct('prov:entity')

		# Get random element identifier $d_{ij}$:
		output_entities = list(entities.aggregate([
			{'$match': {'identifier': {'$nin': invalidated_ents_id}}}
		]))

		rand_num = random.randint(0,len(output_entities))

		entity_id = output_entities[rand_num]['identifier']
		entity_id = 'entity:e8d47bb2-65e1-4195-a5da-7f2a5406dff7'

		print('Why provenance of: ' + entity_id)

		# Get identifier list of input entities that influenced an element:
		time1 = time.time()
		input_entities = get_why_prov([entity_id])

		# Find mongodb documents from identifier list:
		#why_prov = entities.find({'identifier':{'$in':input_entities}})
		db.why_prov.drop()
		why_prov = entities.aggregate([{'$match':{'identifier':{'$in':input_entities}}}, {'$out':'why_prov'}])

		time2 = time.time()
		#text = '{:s} function took {:.3f} ms'.format('Why Provenance', (time2-time1)*1000.0)
		text = '{:s} function took {:.3f} sec.'.format('why Provenance', (time2-time1))
		print(text)

		# Print description of input entities that influenced the element $d_{ij}$:
		#print(why_prov.explain())
		print('Result saved in why_prov collection.')

		# Close Mongodb connection:
		client.close()
	else:
		print('[ERROR] usage: why_provenance.py <db_name> ')
